if(document.body.classList.contains("cc-animate-enabled"))if("IntersectionObserver"in window&&"MutationObserver"in window){const initAnimateOnScroll=()=>{const animatableElems=document.querySelectorAll("[data-cc-animate]:not(.cc-animate-init)");if(animatableElems.length>0){const intersectionObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{entry.isIntersecting&&!entry.target.classList.contains("cc-animate-in")&&(entry.target.classList.add("cc-animate-in"),observer.unobserve(entry.target))})});animatableElems.forEach(elem=>{elem.dataset.ccAnimateDelay&&(elem.style.animationDelay=elem.dataset.ccAnimateDelay),elem.dataset.ccAnimateDuration&&(elem.style.animationDuration=elem.dataset.ccAnimateDuration),elem.dataset.ccAnimate&&elem.classList.add(elem.dataset.ccAnimate),elem.classList.add("cc-animate-init"),intersectionObserver.observe(elem)})}},aosMinWidth=getComputedStyle(document.documentElement).getPropertyValue("--aos-min-width")||"0",mq=window.matchMedia(`(min-width: ${aosMinWidth}px)`);if(mq.matches)initAnimateOnScroll(),document.addEventListener("DOMContentLoaded",()=>{new MutationObserver(debounce(initAnimateOnScroll,250)).observe(document.body,{subtree:!0,childList:!0})});else{document.body.classList.remove("cc-animate-enabled");try{mq.addEventListener("change",event=>{event.matches&&(document.body.classList.add("cc-animate-enabled"),setTimeout(initAnimateOnScroll,100))})}catch{}}}else document.body.classList.remove("cc-animate-enabled");
//# sourceMappingURL=/cdn/shop/t/4/assets/animate-on-scroll.js.map?v=15249566486942820451693734873
